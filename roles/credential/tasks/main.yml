---

# Create EDA Controller Credential
- name: Add EDA Controller credential
  infra.eda_configuration.credential:
    name:             "{{ __credential_item.name }}"
    new_name:         "{{ __credential_item.new_name | default(omit) }}"
    description:      "{{ __credential_item.description | default(omit) }}"
    credential_type:  "{{ __credential_item.credential_type | default('GitHub Personal Access Token') }}"
    username:         "{{ __credential_item.username | default(omit) }}"
    secret:           "{{ __credential_item.secret | default(omit) }}"
    state:            "{{ __credential_item.state | default(eda_state | default('present')) }}"
    eda_host:         "{{ eda_host | default(eda_hostname) }}"
    eda_username:     "{{ eda_username | default(omit) }}"
    eda_password:     "{{ eda_password | default(omit) }}"
    validate_certs:   "{{ eda_validate_certs | default(omit) }}"
    request_timeout:  "{{ eda_request_timeout | default(omit) }}"
  loop: "{{ eda_credentials }}"
  loop_control:
    loop_var: "__credential_item"
  no_log: "{{ eda_configuration_credential_secure_logging }}"
  async: 1000
  poll: 0
  register: __credentials_job_async
  changed_when: not __credentials_job_async.changed
  vars:
    ansible_async_dir: '{{ eda_configuration_async_dir }}'

- name: "Create credential | Wait for finish the credential creation"
  ansible.builtin.async_status:
    jid: "{{ __credentials_job_async_result_item.ansible_job_id }}"
  register: __credentials_job_async_result
  until: __credentials_job_async_result.finished
  retries: "{{ eda_configuration_credential_async_retries }}"
  delay: "{{ eda_configuration_credential_async_delay }}"
  loop: "{{ __credentials_job_async.results }}"
  loop_control:
    loop_var: __credentials_job_async_result_item
  when: __credentials_job_async_result_item.ansible_job_id is defined
  no_log: "{{ eda_configuration_credential_secure_logging }}"
  vars:
    ansible_async_dir: '{{ eda_configuration_async_dir }}'
...

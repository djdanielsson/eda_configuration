---

# Sync EDA Controller Project
- name: Sync EDA Controller project
  project_sync:
    name:             "{{ __project_sync_item.name }}"
    wait:             "{{ __project_sync_item.wait | default(omit) }}"
    interval:         "{{ __project_sync_item.interval | default(eda_configuration_project_sync_async_delay) }}"
    timeout:          "{{ __project_sync_item.timeout | default(omit) }}"
    eda_host:         "{{ eda_host | default(eda_hostname) }}"
    eda_username:     "{{ eda_username | default(omit) }}"
    eda_password:     "{{ eda_password | default(omit) }}"
    validate_certs:   "{{ eda_validate_certs | default(omit) }}"
    request_timeout:  "{{ eda_request_timeout | default(omit) }}"
  loop: "{{ eda_projects }}"
  loop_control:
    loop_var: "__project_sync_item"
  when: __project_sync_item.sync | default(false)
  no_log: "{{ eda_configuration_project_secure_logging }}"
  async: 1000
  poll: 0
  register: __projects_sync_job_async
  changed_when: not __projects_sync_job_async.changed
  vars:
    ansible_async_dir: '{{ eda_configuration_async_dir }}'

- name: "Sync project | Wait for finish syncing the project"
  ansible.builtin.async_status:
    jid: "{{ __projects_sync_job_async_result_item.ansible_job_id }}"
  register: __projects_sync_job_async_result
  until: __projects_sync_job_async_result.finished
  retries: "{{ eda_configuration_project_sync_async_retries }}"
  delay: "{{ eda_configuration_project_sync_async_delay }}"
  loop: "{{ __projects_sync_job_async.results }}"
  loop_control:
    loop_var: __projects_sync_job_async_result_item
  when: __projects_sync_job_async_result_item.ansible_job_id is defined
  no_log: "{{ eda_configuration_project_secure_logging }}"
  vars:
    ansible_async_dir: '{{ eda_configuration_async_dir }}'
...
